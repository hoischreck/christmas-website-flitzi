<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/style.css" type="text/css">
    <title>Geschenk Nr.3</title>
</head>
<body onload="loadVerifiedChallengs()">

    <!-- Navigation Bar -->
    
    <%- include ('partials/navTop.ejs') %>
    
    <!-- Sections  -->

    <section>

            <div class="intro__container_header">
                Geschenk 3
            </div>

            <div class="intro__container_text">
                <p class="intro__paragraph">
                    Um das dritte Geschenk freizuschalten, musst du diesmal eine Reihe an Aufgaben erf체llen.
                    <br>
                    Dabei musst du jede erf체llte Aufgabe, zur Verifizierung, mit einem Beweisbild/video an mich per <b>Whatsapp</b> schicken.
                    <br>
                    Solltes du alle Aufgaben erfolgreich erf체llt haben, erf채hrst welches letzte Geschenk auf dich wartet :). 
                    <br>
                </p>
            </div>

            <!-- Challenges -->

            <div id="challenge1" class="challenge__container flex-column">
                <h2 class="challenge__heading">
                    Aufgabe 1
                </h2>        
                <p class="challenge__paragraph">
                    Fangen wir leicht an: Mache ein Bild von dir und deiner Familie.
                </p>
                <div class="challenge__container_status">
                    <b>Status:</b>
                    <span class="challenge__status">
                        Nicht erledigt
                    </span>
                </div>
            </div>

            <div id="challenge2" class="challenge__container flex-column">
                <h2 class="challenge__heading">
                    Aufgabe 2
                </h2>
                <p class="challenge__paragraph">
                    Mache einen Handstand
                </p>
                <div class="challenge__container_status">
                    <b>Status:</b>
                    <span class="challenge__status">
                        Nicht erledigt
                    </span>
                </div>
            </div>

            <div id="challenge3" class="challenge__container flex-column">
                <h2 class="challenge__heading">
                    Aufgabe 3
                </h2>
                <p class="challenge__paragraph">
                    Lege dich in den Schnee und mache einen Schneeengel.
                </p>
                <div class="challenge__container_status">
                    <b>Status:</b>
                    <span class="challenge__status">
                        Nicht erledigt
                    </span>
                </div>
            </div>

    </section>

<script>

    const socket = new WebSocket("ws://" + window.location.host); // use ws or wss protocol?

    const challengePrefix = "challenge";
    const challengeStatusClass = "challenge__status";
    const challengePClass = "challenge__paragraph";
    const verfiyCssClass = "challenge__finished";
    const verifyCssClassText = "challenge__finished-text"

    const challengeCount = 3;

    function verfifyChallenge(challengeNum) {
        var challengeElement = document.getElementById(challengePrefix + challengeNum);
        challengeElement.classList.add(verfiyCssClass);
        var paragraph = challengeElement.querySelector("." + challengePClass);
        paragraph.classList.add(verifyCssClassText);
        var statusLabel = challengeElement.querySelector("." + challengeStatusClass);
        statusLabel.innerHTML = "Erledigt";
    }

    function loadVerifiedChallengs() {

        var user = JSON.parse('<%- JSON.stringify(user) %>');
        console.log(user);
        for (i = 1; i < challengeCount+1; i++) {
            if (user.info.additionalPresentData[3].challenges.finished[i]) {
                verfifyChallenge(i);
            }
        }
    }

    socket.addEventListener("message", (event) => {
        var data = JSON.parse(event.data);
        switch(data.type) {
            case "verifyChallenge":
                verfifyChallenge(data.chlNum);
                break;
        }
    })

    socket.addEventListener("open", (event) => {
        
        var data = {
            type: "newUser",
            userName: "<%- user.name %>",
            date: Date.now()
        }

        socket.send(JSON.stringify(data));
    })

    // socket.addEventListener("message", (event) => {
    //     console.log("message from server: " + event.data);
    // })

    // function sendMsg(content) {
    //     socket.send(content);
    // }

</script>
</body>
</html>