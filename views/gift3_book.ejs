<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/style.css" type="text/css">
    <title>Geschenk Nr.3</title>
</head>
<body onload="loadVerifiedChallengs()">

    <!-- Navigation Bar -->
    
    <%- include ('partials/navTop.ejs') %>
    
    <!-- Sections  -->

    <section>

            <div class="intro__container_header">
                Geschenk 3
            </div>

            <div class="container-secondary flex-column flex-xy">
            
                <div class="intro__container_text" id="present_3__text_container">
                    <p class="intro__paragraph">
                        Um das dritte Geschenk freizuschalten, musst du diesmal eine Reihe an Aufgaben erfüllen.
                        <br>
                        Dabei musst du jede erfüllte Aufgabe, zur Verifizierung, mit einem Beweisbild/video an mich per <b>Whatsapp</b> schicken.
                        <br>
                        Solltes du alle Aufgaben erfolgreich erfüllt haben, erfährst du welches letzte Geschenk auf dich wartet :). 
                        <br>
                    </p>
                </div>

                <!-- Challenges -->

                <div id="challenge1" class="challenge__container flex-column">
                    <h2 class="challenge__heading">
                        Aufgabe 1
                    </h2>        
                    <p class="challenge__paragraph">
                        Fangen wir leicht an: Mache ein Bild von dir und deiner Familie.
                    </p>
                    <div class="challenge__container_status">
                        <b>Status:</b>
                        <span class="challenge__status">
                            Nicht erledigt
                        </span>
                    </div>
                </div>

                <div id="challenge2" class="challenge__container flex-column">
                    <h2 class="challenge__heading">
                        Aufgabe 2
                    </h2>
                    <p class="challenge__paragraph">
                        Mache einen Handstand
                    </p>
                    <div class="challenge__container_status">
                        <b>Status:</b>
                        <span class="challenge__status">
                            Nicht erledigt
                        </span>
                    </div>
                </div>

                <div id="challenge3" class="challenge__container flex-column">
                    <h2 class="challenge__heading">
                        Aufgabe 3
                    </h2>
                    <p class="challenge__paragraph">
                        Lege dich in den Schnee und mache einen Schneeengel.
                    </p>
                    <div class="challenge__container_status">
                        <b>Status:</b>
                        <span class="challenge__status">
                            Nicht erledigt
                        </span>
                    </div>
                </div>

                <div id="challenge4" class="challenge__container flex-column">
                    <h2 class="challenge__heading">
                        Aufgabe 4
                    </h2>
                    <p class="challenge__paragraph">
                        Lass dich von einem Schneeball abwerfen (nicht solala + Zeitlupenaufnahme).
                    </p>
                    <div class="challenge__container_status">
                        <b>Status:</b>
                        <span class="challenge__status">
                            Nicht erledigt
                        </span>
                    </div>
                </div>

                <div id="challenge5" class="challenge__container flex-column">
                    <h2 class="challenge__heading">
                        Aufgabe 5
                    </h2>
                    <p class="challenge__paragraph">
                        Baue eine(n) Schneemann/frau.
                    </p>
                    <div class="challenge__container_status">
                        <b>Status:</b>
                        <span class="challenge__status">
                            Nicht erledigt
                        </span>
                    </div>
                </div>

                <div id="challenge6" class="challenge__container flex-column">
                    <h2 class="challenge__heading">
                        Aufgabe 6
                    </h2>
                    <p class="challenge__paragraph">
                        Drücke dein Gesicht in einen Haufen Schnee.
                    </p>
                    <div class="challenge__container_status">
                        <b>Status:</b>
                        <span class="challenge__status">
                            Nicht erledigt
                        </span>
                    </div>
                </div>

                <div id="challenge7" class="challenge__container flex-column">
                    <h2 class="challenge__heading">
                        Aufgabe 7
                    </h2>
                    <p class="challenge__paragraph">
                        Brate 4 Spiegeleier in <u>einer</u> Pfanne gleichzeitg.
                    </p>
                    <div class="challenge__container_status">
                        <b>Status:</b>
                        <span class="challenge__status">
                            Nicht erledigt
                        </span>
                    </div>
                </div>

                <input class="btn-1 present_reveal__btn present_reveal__btn-blocked" type="button" value="Schalte dein 3. Geschenk frei!" onclick="showPresent()">

                <div class="present_reveal__container hide">
                    <p class="present_reveal__paragraph">
                        Ho, ho, ho!
                        <br>
                        Du fragst dich vielleicht, wo nun das Geschenk ist. Warum steht denn hier nichts? Naja, wie sage ich das. 
                        <br>
                        Ich habe ein wenig geschwindelt, aber das wirst du augenblicklich verstehen. Um das Rätselslösung, sowie das dritte und letzte Geschenk zu finden, musst du im Schrank deiner Mutter nachschauen.
                    </p>

                    <div class="flex-row flex-xy present_code__container" style="width: 90%;padding: 0 .9rem 0 .9rem;">
                        <div class="intro__container_text present_code__text_container">
                            <p class="intro__paragraph">
                                <b>Hier endet nun diese kleine Reise. Ich hoffe dir gefällt diese kleine Aufmerksamkeit. Nach über 100h Arbeit an diesem Projekt möchte ich das hoffen, obwohl ich natürlich vor allem für mich persönlich vieles gelernt habe. Bis dahin, frohe Weihnachten!</b>
                            </p>
                        </div>
                        <div class="present_btn__container">
                            <a href="/" class="present_btn__anchor">
                                <div class="present_btn__anchor_container flex-xy">
                                    <img class="image-fill" src="/img/present.png" alt="Startseite">
                                    <div class="present_btn__overlap">Startseite</div>
                                </div>
                            </a>
                        </div>
                    </div>

                </div>

            </div>

    </section>

    <!-- 4 Eier in einer Pfanne -->

<script>

    //const socket = new WebSocket("ws://" ); // use ws or wss protocol?
    const socket = new WebSocket("ws://" + window.location.href.split("//")[1]);

    const challengePrefix = "challenge";
    const challengeStatusClass = "challenge__status";
    const challengePClass = "challenge__paragraph";
    const verfiyCssClass = "challenge__finished";
    const verifyCssClassText = "challenge__finished-text";

    const presentRevealBtnBlockClass = "present_reveal__btn-blocked";
    const presentRevealBtnClass = "present_reveal__btn";

    const presentRevealClass = "present_reveal__container";
    const hideCssClass = "hide";
    const animationCssClass = "present_reveal-animation";

    const challengeCount = 7;

    const user = JSON.parse('<%- JSON.stringify(user) %>');

    function allChlVerified() {
        let finished = document.getElementsByClassName(verfiyCssClass);
        return (finished.length == challengeCount) ? true : false;
    }

    function verfifyChallenge(challengeNum) {
        var challengeElement = document.getElementById(challengePrefix + challengeNum);
        challengeElement.classList.add(verfiyCssClass);
        var paragraph = challengeElement.querySelector("." + challengePClass);
        paragraph.classList.add(verifyCssClassText);
        var statusLabel = challengeElement.querySelector("." + challengeStatusClass);
        statusLabel.innerHTML = "Erledigt";
    
        if (allChlVerified()) {
            var btn = document.querySelector("." + presentRevealBtnClass);
            if (btn.classList.contains(presentRevealBtnBlockClass)) {
                btn.classList.remove(presentRevealBtnBlockClass);
                //socket.close(); does not invoke server handler?
            } 
        }
    }

    function loadVerifiedChallengs() {
        for (let i = 1; i < challengeCount+1; i++) {
            if (user.info.additionalPresentData[3].challenges.finished[i]) {
                verfifyChallenge(i);
            }
        }
    }

    socket.addEventListener("message", (event) => {
        var data = JSON.parse(event.data);
        switch(data.type) {
            case "verifyChallenge":
                verfifyChallenge(data.chlNum);
                break;
        }
    })

    socket.addEventListener("open", (event) => {
        var data = {
            type: "newUser",
            userName: user.name,
            date: Date.now()
        }
        socket.send(JSON.stringify(data));
    })

    window.addEventListener("unload", function () {
        if (socket.readyState == WebSocket.OPEN) {
            socket.send(JSON.stringify({
                type: "closeConnection",
                name: user.name
            }))
        }
        //socket.close(); //connection is closed by server
    });

    // function requestTxtFile(fileName) {
    //     var data = {
    //         type: "requestTxtFile",
    //         fileName: fileName
    //     }
    //     socket.send(JSON.stringify(data));
    // }

    function showPresent() {
        if (!allChlVerified()) {
            // challenges havent been completed
        } else {
            revealPresent();
        }
    }

    // todo: outsource function for the gifts
    function revealPresent() {
        
        var presentElement = document.querySelector("." + presentRevealClass);
        if (!presentElement.classList.contains(hideCssClass)) {
            return;
        } 

        presentElement.classList.remove(hideCssClass);
        presentElement.classList.add(animationCssClass);

        setTimeout(() => {
            presentElement.classList.remove(animationCssClass);
        }, 500)
    };

    // socket.addEventListener("message", (event) => {
    //     console.log("message from server: " + event.data);
    // })

    // function sendMsg(content) {
    //     socket.send(content);
    // }

</script>
</body>
</html>